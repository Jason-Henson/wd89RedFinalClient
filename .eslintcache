[{"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/index.js":"1","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/reportWebVitals.js":"2","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Signup.jsx":"3","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/App.jsx":"4","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Login.jsx":"5","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/familyAdd.jsx":"6","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyAdd.jsx":"7","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyAll.jsx":"8","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyIndex.jsx":"9","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamUpdate.jsx":"10","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamDelete.jsx":"11","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointAdd.jsx":"12","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointIndex.jsx":"13","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointAll.jsx":"14","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointUpdate.jsx":"15","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointDelete.jsx":"16","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsAll.jsx":"17","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsDelete.jsx":"18","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsUpdate.jsx":"19","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsIndex.jsx":"20"},{"size":500,"mtime":1635812595395,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1635371767193,"results":"23","hashOfConfig":"22"},{"size":2046,"mtime":1636235359988,"results":"24","hashOfConfig":"22"},{"size":1543,"mtime":1636502115511,"results":"25","hashOfConfig":"22"},{"size":1450,"mtime":1636235424411,"results":"26","hashOfConfig":"22"},{"size":2503,"mtime":1635468475409,"results":"27","hashOfConfig":"22"},{"size":2369,"mtime":1636126070453,"results":"28","hashOfConfig":"22"},{"size":2671,"mtime":1636075046190,"results":"29","hashOfConfig":"22"},{"size":1271,"mtime":1635979232834,"results":"30","hashOfConfig":"22"},{"size":3675,"mtime":1636075184652,"results":"31","hashOfConfig":"22"},{"size":3406,"mtime":1636076762646,"results":"32","hashOfConfig":"22"},{"size":4320,"mtime":1636406299740,"results":"33","hashOfConfig":"22"},{"size":1251,"mtime":1636247480791,"results":"34","hashOfConfig":"22"},{"size":3246,"mtime":1636500778487,"results":"35","hashOfConfig":"22"},{"size":4833,"mtime":1636407976720,"results":"36","hashOfConfig":"22"},{"size":4607,"mtime":1636411103797,"results":"37","hashOfConfig":"22"},{"size":2868,"mtime":1636501903720,"results":"38","hashOfConfig":"22"},{"size":233,"mtime":1636428701895,"results":"39","hashOfConfig":"22"},{"size":5485,"mtime":1636498549392,"results":"40","hashOfConfig":"22"},{"size":1261,"mtime":1636433168165,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ifw38i",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/index.js",[],["87","88"],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/reportWebVitals.js",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Signup.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/App.jsx",["89","90","91"],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Login.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/familyAdd.jsx",["92"],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyAdd.jsx",[],["93","94"],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyAll.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamilyIndex.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamUpdate.jsx",["95"],"import React from \"react\";\nimport FamDelete from \"./FamDelete\";\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\n\nclass FamilyUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      famMember: this.props.familyMemberData.famMember,\n      famAge: this.props.familyMemberData.famAge,\n      famAllergic: this.props.familyMemberData.famAllergic,\n      token: this.props.token, // pass to family delete\n      familyMemberData: this.props.familyMemberData,\n      showModal: false,\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"token\")) {\n      this.setState({ sessionToken: localStorage.getItem(\"token\") });\n      console.log(\"family member data\", this.props.familyMemberData);\n      this.props.generateTable()\n    }\n  }\n\n\n  handleSubmit = (e) => {\n    //your ID can come from this.props.familyData.id\n    e.preventDefault();\n    fetch(`http://localhost:3000/family/${this.props.familyMemberData.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        family: {\n          famMember: this.state.famMember,\n          famAge: this.state.famAge,\n          famAllergic: this.state.famAllergic,\n          \n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((fetchResult) => {\n        console.log(fetchResult)\n      })\n      .then(this.props.generateTable())\n      .then(this.props.hideModal())\n      .catch((err) => console.log(err));\n  };\n  \n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={true}\n          backdrop={false}\n          centered\n          fade={false}\n          fullscreen\n          scrollable\n          // toggle={function noRefCheck() {}}\n        >\n          <ModalHeader>\n            Update Family Member Information\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"famMember\">Family Member Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"famMember\"\n                  id=\"famMember\"\n                  placeholder=\"User name\"\n                  value={this.state.famMember}\n                  onChange={(e) => this.setState({ famMember: e.target.value })}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"famAge\">Age</Label>\n                <Input\n                  type=\"text\"\n                  name=\"famAge\"\n                  id=\"famAge\"\n                  placeholder=\"Age\"\n                  value={this.state.famAge}\n                  onChange={(e) => this.setState({ famAge: e.target.value })}\n                />\n              </FormGroup>\n\n              <FormGroup\n                check\n                name=\"famAllergic\"\n                id=\"famAllergic\"\n                value={this.props.familyMemberData.famAllergic}\n                onClick={(e) => this.setState({ famAllergic: true })}\n              >\n                <Label>Allergies?</Label>\n                <Input type=\"checkbox\" />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.handleSubmit}>\n              Update\n            </Button>{\" \"}\n            <Button onClick={this.props.hideModal}>\n              {\" \"}\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default FamilyUpdate;\n","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/family/FamDelete.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointAdd.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointIndex.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointAll.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointUpdate.jsx",["96"],"import React from \"react\";\nimport AppointDelete from \"./AppointDelete\";\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\n\nclass ApointUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editAppFor: this.props.appointmentData.appFor,\n      editAppDate: this.props.appointmentData.appDate,\n      editAppTime: this.props.appointmentData.appTime,\n      editAppLoc: this.props.appointmentData.appLoc,\n      editAppDoc: this.props.appointmentData.appDoc,\n      editAppNotes: this.props.appointmentData.appNotes,\n      token: this.props.token,\n      appointmentData: this.props.appointmentData,\n      showModal: false,\n    };\n  }\n\n//   componentDidMount() {\n//     if (localStorage.getItem(\"token\")) {\n//       this.setState({ sessionToken: localStorage.getItem(\"token\") });\n//       console.log(\"family member data\", this.props.appointmentData);\n//       this.props.generateTable();\n//     }\n//   }\n\n  handleSubmit = (e) => {\n    console.log(this.props.appointmentData.userId);\n    e.preventDefault();\n    fetch(`http://localhost:3000/appointment/${this.props.appointmentData.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        appointment: {\n            appFor: this.state.editAppFor,\n            appDate: this.state.editAppDate,\n            appTime: this.state.editAppTime,\n            appLoc: this.state.editAppLoc,\n            appDoc: this.state.editAppDoc,\n            appNotes: this.state.editAppNotes,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((fetchResult) => {\n        console.log(fetchResult, \"this is coming from update line 61\");\n        //pass down fetchApp instead of generateTable.\n        this.props.generateTable();\n        this.props.hideModal();\n      })\n  };\n\n closeUpdateModal = () => {\n    this.props.hideModal();\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={true}\n          backdrop={false}\n          centered\n          fade={false}\n          fullscreen\n          scrollable\n          // toggle={function noRefCheck() {}}\n        >\n          <ModalHeader>Update Appointment</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <Label for=\"appFor\">Family Member Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"appFor\"\n                  id=\"appFor\"\n                  value={this.state.editAppFor}\n                  onChange={(e) => this.setState({ editAppFor: e.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"date\"\n                  name=\"appDate\"\n                  id=\"appDate\"\n                  placeholder=\"Date\"\n                  value={this.state.editAppDate}\n                  onChange={(e) => this.setState({ editAppDate: e.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"time\"\n                  name=\"appTime\"\n                  id=\"appTime\"\n                  placeholder=\"Date\"\n                  value={this.state.editAppTime}\n                  onChange={(e) => this.setState({ editAppTime: e.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"appLoc\"\n                  id=\"appLoc\"\n                  placeholder=\"Address\"\n                  value={this.state.editAppLoc}\n                  onChange={(e) => this.setState({ editAppLoc: e.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"appDoc\"\n                  id=\"appDoc\"\n                  placeholder=\"Doctor\"\n                  value={this.state.editAppDoc}\n                  onChange={(e) => this.setState({ editAppDoc: e.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"appNotes\"\n                  id=\"appNotes\"\n                  placeholder=\"Notes\"\n                  value={this.state.editAppNotes}\n                  onChange={(e) => this.setState({ editAppNotes: e.target.value })}\n                />\n              </FormGroup>\n            <Button color=\"primary\">\n              Update\n            </Button>{\" \"}\n            <Button onClick={this.closeUpdateModal}> Cancel</Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ApointUpdate;\n","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/appointments/AppointDelete.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsAll.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsDelete.jsx",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsUpdate.jsx",["97"],"import React from \"react\";\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\n\nclass MedsUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMedFor: this.props.medData.medFor,\n      editMedName: this.props.medData.medName,\n      editMedScript: this.props.medData.medScript,\n      editMedDesc: this.props.medData.medDesc,\n      editMedActive: this.props.medData.medActive,\n      editMedNotes: this.props.medData.medNotes,\n      token: this.props.token,\n      medData: this.props.medsData,\n      showModal: false,\n      myFamily: [],\n    };\n  }\n\n/******************************************************\n   * Fetching family member name to add to drop down list\n   ******************************************************/\n\n\n fetchFamily() {\n   console.log(this.props.medData, \"line 37\")\n  fetch(`http://localhost:3000/family/all/`, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.props.token,\n    }),\n  })\n    .then((res) => res.json())\n    .then((famFetchResult) => {\n      this.setState({\n        myFamily: famFetchResult,\n      });\n    })\n    .then(console.log(\"My Family from state variable\", this.state.myFamily))\n    .catch((err) => console.log(err));\n}\n  /******************************************************\n   * Post to data base\n   ******************************************************/\n\n  handleSubmit = (e) => {\n    console.log(this.props.medData.userId, \"this is coming from line 57 event fired\");\n    e.preventDefault();\n    fetch(`http://localhost:3000/meds/${this.props.medData.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        meds: {\n          medFor: this.state.editMedFor,\n          medName: this.state.editMedName,\n          medScript: this.state.editMedScript,\n          medDesc: this.state.editMedScript,\n          medActive: this.state.editMedActive,\n          medNotes: this.state.editMedNotes,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((fetchResult) => {\n        console.log(fetchResult, \"this is coming from update line 61\");\n        //pass down fetchApp instead of generateTable.\n        this.props.generateTable()\n        this.props.hideModal()\n      })\n      .then(console.log(this.medData, \"this is coming form line\"))\n  };\n\n closeUpdateModal = () => {\n    this.props.hideModal();\n  };\n\n  componentDidMount() {\n    this.fetchFamily()\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={true}\n          backdrop={false}\n          centered\n          fade={false}\n          fullscreen\n          scrollable\n        >\n          <ModalHeader>View/Update Med Information</ModalHeader>\n          To update the information click the UPDATE button.  Or click the GO BACK button to return to the meds list.\n          <ModalBody>\n            <Form onSubmit={this.handleSubmit}>\n            <FormGroup>\n            <select\n              type=\"select\"\n              name=\"medFor\"\n              id=\"medFor\"\n              placeholder=\"Family Member Name\"\n              value={this.state.editMedFor}\n              onChange={(e) => this.setState({ editMedFor: e.target.value })}\n            >\n              {this.state.myFamily.map((fam) => (\n                <option value={fam.famMember}>{fam.famMember}</option>\n              ))}\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"MedName\"\n              id=\"MedName\"\n              placeholder=\"Med Name\"\n              value={this.state.editMedName}\n              onChange={(e) => this.setState({ editMedName: e.target.value })}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"medScript\"\n              id=\"medScript\"\n              placeholder=\"Script Number\"\n              value={this.state.editMedScript}\n              onChange={(e) => this.setState({ editMedScript: e.target.value })}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"medDesc\"\n              id=\"medDesc\"\n              placeholder=\"Med Description\"\n              value={this.state.editMedDesc}\n              onChange={(e) => this.setState({ editMedDesc: e.target.value })}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"medActive\"\n              id=\"medActive\"\n              placeholder=\"Currently Taking?\"\n              value={this.state.editMedActive}\n              onChange={(e) => this.setState({ editMedActive: e.target.value })}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"MedNotes\"\n              id=\"MedNotes\"\n              placeholder=\"Notes\"\n              value={this.state.editMedNotes}\n              onChange={(e) => this.setState({ editMedNotes: e.target.value })}\n            />\n          </FormGroup>\n            <Button color=\"primary\">\n              Update\n            </Button>{\" \"}\n            <Button onClick={this.closeUpdateModal}> Go Back</Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default MedsUpdate;\n","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/meds/MedsIndex.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":20},{"ruleId":"102","severity":1,"message":"106","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":18},{"ruleId":"102","severity":1,"message":"107","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":15},{"ruleId":"102","severity":1,"message":"108","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","severity":1,"message":"111","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"113","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":8},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'AppointIndex' is defined but never used.","Identifier","unusedVar","'AppointAdd' is defined but never used.","'MedsAll' is defined but never used.","'Component' is defined but never used.",["114"],["115"],"'FamDelete' is defined but never used.","'AppointDelete' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]