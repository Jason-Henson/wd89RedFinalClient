[{"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/index.js":"1","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/reportWebVitals.js":"2","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Signup.jsx":"3","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/App.jsx":"4"},{"size":500,"mtime":1635375260263,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1635371767193,"results":"7","hashOfConfig":"6"},{"size":2526,"mtime":1635448249870,"results":"8","hashOfConfig":"6"},{"size":811,"mtime":1635450381577,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ifw38i",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/index.js",[],["20","21"],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/reportWebVitals.js",[],"/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/components/auth/Signup.jsx",["22","23"],"import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      email: \"\",\n      passWord: \"\",\n      sessionToken: \"\",\n    };\n\n    // this.handleUserNameChange = this.handleUserNameChange.bind(this)\n    // this.handleEmailChange = this.handleEmailChange.bind(this)\n    // this.handlePassWordChange = this.handlePassWordChange.bind(this)\n  }\n\n  // sessionToken = this.props.sessionToken\n\n  //\n//   handleUserNameChange(e) { \n//     this.setState({ userName: e.target.value });\n//     console.log(this.state.userName)\n//   }\n\n//  handleEmailChange(e) {\n//     this.setState({ email: e.target.value });\n//     console.log(this.state.email)\n//   }\n\n//   handlePassWordChange(e) {\n//     this.setState({ passWord: e.target.value });\n//     console.log(this.state.passWord)\n  // }\n\n  // user: { userName: this.state.userName, email: this.state.e, passwordhash: this.state.passWord },\n\n  handleSubmit = () => {\n    fetch(`http://localhost:3000/user/create`, {\n      method: \"POST\",\n      body: JSON.stringify({user: { userName: this.state.userName, email: this.state.email, passwordhash: this.state.passWord }}),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n   \n    })\n    .then((res) => res.json())\n    .then((fetchResult) => {\n      this.props.updateToken(fetchResult.sessionToken)\n      console.log(fetchResult)\n    })\n   \n\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Hello From Signup</h1>\n        <Form>\n        <FormGroup>\n        <Label for=\"exampleEmail\">User Name</Label>\n        <Input type=\"text\" name=\"userName\" id=\"userName\" placeholder=\"User name\" value={this.state.userName} onChange={(e) => this.setState({userName: e.target.value})} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleEmail\">Email</Label>\n        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" value={this.state.email} onChange={(e) => this.setState({email: e.target.value})} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Password</Label>\n        <Input type=\"passWord\" name=\"passWord\" id=\"passWord\" value={this.state.passWord} placeholder=\"Password\" onChange={(e) => this.setState({passWord: e.target.value})} />\n      </FormGroup>\n      <Button onClick={this.handleSubmit}>Sign Up</Button>\n    </Form>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","/Users/jasonhenson/Library/Mobile Documents/com~apple~CloudDocs/wd89RedFinalProject/client/wd89RedFinalClient/src/App.jsx",["24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":2,"column":49,"nodeType":"31","messageId":"32","endLine":2,"endColumn":57},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","no-global-assign","no-unsafe-negation"]